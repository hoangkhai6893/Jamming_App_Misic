{"ast":null,"code":"var _jsxFileName = \"/home/ninja/Documents/Web/jamming/src/Components/App/App.js\";\nimport React from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport './App.css';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My Playlist',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    alert(\" this method is linked to the button correctly\");\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: \"New Playlist\",\n        playlistTracks: []\n      });\n    });\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Ja\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"mmm\"), \"ing\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Playlist, {\n      playlistName: this.state.playlistName,\n      playlistTracks: this.state.playlistTracks,\n      onRemove: this.removeTrack,\n      onNameChange: this.updatePlaylistName,\n      onSave: this.savePlaylist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ninja/Documents/Web/jamming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","id","push","setState","filter","currentTrack","name","alert","trackUris","map","uri","then","term","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport './App.css';\n\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    searchResults: [],\n    playlistName: 'My Playlist',\n    playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track){\n    let tracks = this.state.playlistTracks;\n    if(tracks.find(savedTrack => savedTrack.id === track.id)){\n      return;\n    }\n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  }\n  removeTrack(track){\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter( currentTrack =>  currentTrack.id !== track.id  )\n    this.setState({playlistTracks: tracks});\n  }\n  updatePlaylistName(name){\n    this.setState( { playlistName: name });\n\n  }\n  savePlaylist(){\n    alert(\" this method is linked to the button correctly\");\n    const trackUris = this.state.playlistTracks.map( track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then( () => {\n      this.setState({\n        playlistName: \"New Playlist\",\n        playlistTracks: [],\n      });\n    });\n  }\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({ searchResults: searchResults });\n    });\n  }\n  render()\n  {  \n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar   onSearch={this.search} />\n          <div className=\"App-playlist\">\n\n            <SearchResults searchResults = {this.state.searchResults} \n                           onAdd = { this.addTrack}  />\n\n            <Playlist playlistName = {this.state.playlistName} \n                      playlistTracks = {this.state.playlistTracks} \n                      onRemove = { this.removeTrack}\n                      onNameChange = {this.updatePlaylistName}\n                      onSave = {this.savePlaylist } />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}