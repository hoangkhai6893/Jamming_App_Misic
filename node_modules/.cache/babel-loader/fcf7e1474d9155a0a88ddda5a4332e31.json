{"ast":null,"code":"import _classCallCheck from\"/home/ninja/Documents/Web/jamming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ninja/Documents/Web/jamming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/ninja/Documents/Web/jamming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/ninja/Documents/Web/jamming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ninja/Documents/Web/jamming/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import SearchBar from'../SearchBar/SearchBar';import SearchResults from'../SearchResults/SearchResults';import Playlist from'../Playlist/Playlist';import'./App.css';import Spotify from'../../util/Spotify';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={searchResults:[],playlistName:'My Playlist',playlistTracks:[]};_this.addTrack=_this.addTrack.bind(_assertThisInitialized(_this));_this.removeTrack=_this.removeTrack.bind(_assertThisInitialized(_this));_this.updatePlaylistName=_this.updatePlaylistName.bind(_assertThisInitialized(_this));_this.savePlaylist=_this.savePlaylist.bind(_assertThisInitialized(_this));_this.search=_this.search.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"addTrack\",value:function addTrack(track){var tracks=this.state.playlistTracks;if(tracks.find(function(savedTrack){return savedTrack.id===track.id;})){return;}tracks.push(track);this.setState({playlistTracks:tracks});}},{key:\"removeTrack\",value:function removeTrack(track){var tracks=this.state.playlistTracks;tracks=tracks.filter(function(currentTrack){return currentTrack.id!==track.id;});this.setState({playlistTracks:tracks});}},{key:\"updatePlaylistName\",value:function updatePlaylistName(name){this.setState({playlistName:name});}},{key:\"savePlaylist\",value:function savePlaylist(){var _this2=this;alert(\" this method is linked to the button correctly\");var trackUris=this.state.playlistTracks.map(function(track){return track.uri;});Spotify.savePlaylist(this.state.playlistName,trackUris).then(function(){_this2.setState({playlistName:\"New Playlist\",playlistTracks:[]});});}},{key:\"search\",value:function search(term){var _this3=this;Spotify.search(term).then(function(searchResults){_this3.setState({searchResults:searchResults});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Ja\",/*#__PURE__*/React.createElement(\"span\",{className:\"highlight\"},\"mmm\"),\"ing\"),/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(SearchBar,{onSearch:this.search}),/*#__PURE__*/React.createElement(\"div\",{className:\"App-playlist\"},/*#__PURE__*/React.createElement(SearchResults,{searchResults:this.state.searchResults,onAdd:this.addTrack}),/*#__PURE__*/React.createElement(Playlist,{playlistName:this.state.playlistName,playlistTracks:this.state.playlistTracks,onRemove:this.removeTrack,onNameChange:this.updatePlaylistName,onSave:this.savePlaylist}))));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/ninja/Documents/Web/jamming/src/Components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","id","push","setState","filter","currentTrack","name","alert","trackUris","map","uri","then","term","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport './App.css';\n\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    searchResults: [],\n    playlistName: 'My Playlist',\n    playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track){\n    let tracks = this.state.playlistTracks;\n    if(tracks.find(savedTrack => savedTrack.id === track.id)){\n      return;\n    }\n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  }\n  removeTrack(track){\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter( currentTrack =>  currentTrack.id !== track.id  )\n    this.setState({playlistTracks: tracks});\n  }\n  updatePlaylistName(name){\n    this.setState( { playlistName: name });\n\n  }\n  savePlaylist(){\n    alert(\" this method is linked to the button correctly\");\n    const trackUris = this.state.playlistTracks.map( track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then( () => {\n      this.setState({\n        playlistName: \"New Playlist\",\n        playlistTracks: [],\n      });\n    });\n  }\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({ searchResults: searchResults });\n    });\n  }\n  render()\n  {  \n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar   onSearch={this.search} />\n          <div className=\"App-playlist\">\n\n            <SearchResults searchResults = {this.state.searchResults} \n                           onAdd = { this.addTrack}  />\n\n            <Playlist playlistName = {this.state.playlistName} \n                      playlistTracks = {this.state.playlistTracks} \n                      onRemove = { this.removeTrack}\n                      onNameChange = {this.updatePlaylistName}\n                      onSave = {this.savePlaylist } />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}